input {
    pipeline { address => "critic_pipeline" }
}

filter {
        #transformar campo
        translate {
                field       => "reviewState"
                destination => "reviewState"  # Sobrescribe el campo existente
                dictionary  => {
                    "rotten" => "mala"
                    "fresh"  => "buena"
                }
                fallback => "desconocido"  # si no tiene flesh ni rotten
            }


        #se aÃ±ade campo
        mutate {
            add_field => { "fuente" => "critics_reviews" } 
        }
        

        prune {
            whitelist_names => [
                "reviewId",
                "movieId",
                "creationDate",
                "criticName",
                "criticPageUrl",
                "reviewState",
                "isFresh",
                "isRotten",
                "isRtUrl",
                "isTopCritic",
                "publicationUrl",
                "publicationName",
                "reviewUrl",
                "quote",
                "scoreSentiment",
                "originalScore",
                "fuente",
                "@timestamp"
            ]
        }
}

output {
    elasticsearch {
        hosts => ["http://es01:9200"]
        index => "project_critic"
        action => "create"
    }
}
