input {
    pipeline { address => "user_pipeline" }
}

filter {
    # Añadir aquí cualquier filtro específico para los datos de user


    
        # se borrar el campo de reviewID ya que viene vacio
        mutate{
            remove_field => ["reviewId"]  # campo borrado
            add_field => { "fuente" => "user_reviews" } #campo añadido
            gsub => [ # Transforma campo --> eliminamos etiquetas HTML 
                "quote", "<[^>]+>", "",
                "quote", ":[^:]+:", ""
            ] 
        }


        #crear un campo nuevo que extraiga info mediante el uso del GROK
        grok {
            match => { "quote" => "(https?://[^\s]+)" }
            add_field => { "contieneURL" => "true" }
        }

        # si no existe campo, se añade false
        if ![contieneURL] {
            mutate {
                add_field => { "contieneURL" => "false" }
            }
        }


        #Campos que queremos que se guarden
        prune {
            whitelist_names => [
                "rating",
                "quote",
                "isVerified",
                "isSuperReviewer",
                "hasSpoilers",
                "hasProfanity",
                "score",
                "creationDate",
                "userDisplayName",
                "userRealm",
                "fuente",
                "contieneURL",
                "@timestamp"
            ]
        }
}

output {
    elasticsearch {
        hosts => ["http://es01:9200"]
        index => "project_user"
        action => "create"
    }
}
